#Euler 2
"""
Each new term in the Fibonacci sequence is generated by adding
the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not
exceed four million, find the sum of the even-valued terms.
"""

def fibinocci(limit):
    fib_list = []
    even_fib_list = []
    fib_list.append(1)
    fib_list.append(2)
    even_fib_list.append(2)
    for i in range(limit):
        c = fib_list[-1]
        d = fib_list[-2]
        e = c + d
        if e < 4000000:
            r = (e % 2 == 0)
            if r == True:
                even_fib_list.append(e)
            fib_list.append(e)

    print("The answer is", sum(even_fib_list))
fibinocci(40)

"""
now in JavaScript
"""
"""
fib_list = [1];
var total = 0, count = 1;
while (count <= 4000000) {
  total += count;
  count += total;
  fib_list.push(total);
  fib_list.push(count);
}
even_num_list = [];
for (i in fib_list) {
  value = fib_list[i];
  if (value % 2 == 0) {
    even_num_list.push(value);
  }}
even_sum_total = 0;
for (num in even_num_list) {
  even_num = even_num_list[num];
  even_sum_total += even_num;
}
console.log(even_sum_total);
"""
